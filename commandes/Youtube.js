const { ovlcmd } = require("../framework/ovlcmd");
const { youtubedl } = require("../framework/youtube");
const axios = require("axios");

ovlcmd(
    {
        nom_cmd: "song",
        classe: "TÃ©lÃ©chargement",
        react: "ðŸŽµ",
        desc: "TÃ©lÃ©charge une chanson depuis YouTube avec un terme de recherche ou un lien YouTube",
        alias: ["aud"],
    },
    async (ms_org, ovl, cmd_options) => {
        const { repondre, arg, ms } = cmd_options;

        if (!arg.length) {
            return await ovl.sendMessage(ms_org, { text: "Veuillez spÃ©cifier un titre de chanson ou un lien YouTube." });
        }

        const query = arg.join(" ");
        const isYouTubeLink = /^https?:\/\/(www\.)?(youtube\.com|youtu\.be)\//.test(arg[0]);

        try {
            // Utilise la fonction youtubedl pour obtenir les informations
            const ytResponse = await youtubedl(isYouTubeLink ? arg[0] : query);

            if (ytResponse.error) {
                return await ovl.sendMessage(ms_org, { text: "Erreur lors de la rÃ©cupÃ©ration des informations de la chanson." });
            }

            const { title, duration, author, thumbnail } = ytResponse.result;

            const caption = `â•­â”€â”€â”€â”€ ã€” OVL-MD SONG ã€• â”€â¬£
â¬¡ Titre: ${title}
â¬¡ DurÃ©e: ${duration}
â¬¡ Auteur: ${author}
â•°â”€â”€â”€â”€â”€â”€â”€â”€â¬£`;

            await ovl.sendMessage(ms_org, { image: { url: thumbnail }, caption: caption });

            // TÃ©lÃ©charger l'audio en utilisant l'API externe
            const audioResponse = await axios.get(`https://ironman.koyeb.app/ironman/dl/yta?url=${query}`, {
                responseType: 'arraybuffer'
            });

            await ovl.sendMessage(ms_org, {
                audio: Buffer.from(audioResponse.data),
                mimetype: 'audio/mp4',
                fileName: `${title}.mp3`
            }, { quoted: ms });

        } catch (error) {
            console.error("Erreur lors du tÃ©lÃ©chargement de la chanson :", error.message || error);
            await ovl.sendMessage(ms_org, { text: "Erreur lors du tÃ©lÃ©chargement de la chanson." });
        }
    }
);

ovlcmd(
    {
        nom_cmd: "video",
        classe: "TÃ©lÃ©chargement",
        react: "ðŸŽ¥",
        desc: "TÃ©lÃ©charge une vidÃ©o depuis YouTube avec un terme de recherche ou un lien YouTube"
    },
    async (ms_org, ovl, cmd_options) => {
        const { repondre, arg, ms } = cmd_options;

        if (!arg.length) {
            return await ovl.sendMessage(ms_org, { text: "Veuillez spÃ©cifier un titre de vidÃ©o ou un lien YouTube." });
        }

        const query = arg.join(" ");
        const isYouTubeLink = /^https?:\/\/(www\.)?(youtube\.com|youtu\.be)\//.test(arg[0]);

        try {
            // Utilise la fonction youtubedl pour obtenir les informations
            const ytResponse = await youtubedl(isYouTubeLink ? arg[0] : query);

            if (ytResponse.error) {
                return await ovl.sendMessage(ms_org, { text: "Erreur lors de la rÃ©cupÃ©ration des informations de la vidÃ©o." });
            }

            const { title, duration, author, thumbnail } = ytResponse.result;

            const caption = `â•­â”€â”€â”€â”€ ã€” OVL-MD VIDEO ã€• â”€â¬£
â¬¡ Titre: ${title}
â¬¡ DurÃ©e: ${duration}
â¬¡ Auteur: ${author}
â•°â”€â”€â”€â”€â”€â”€â”€â”€â¬£`;

           // await ovl.sendMessage(ms_org, { text: caption });
            await ovl.sendMessage(ms_org, { image: { url: thumbnail }, caption: caption });
         // TÃ©lÃ©charger la vidÃ©o en utilisant l'API externe
            const videoResponse = await axios.get(`https://ironman.koyeb.app/ironman/dl/ytv?url=${query}`, {
                responseType: 'arraybuffer'
            });

            await ovl.sendMessage(ms_org, {
                video: Buffer.from(videoResponse.data),
                mimetype: 'video/mp4',
                fileName: `${title}.mp4`
            }, { quoted: ms });

        } catch (error) {
            console.error("Erreur lors du tÃ©lÃ©chargement de la vidÃ©o :", error.message || error);
            await ovl.sendMessage(ms_org, { text: "Erreur lors du tÃ©lÃ©chargement de la vidÃ©o." });
        }
    }
);
